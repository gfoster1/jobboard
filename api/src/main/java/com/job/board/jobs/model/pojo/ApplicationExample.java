package com.job.board.jobs.model.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ApplicationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table application
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table application
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table application
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public ApplicationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table application
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table application
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCandidateidIsNull() {
            addCriterion("candidateId is null");
            return (Criteria) this;
        }

        public Criteria andCandidateidIsNotNull() {
            addCriterion("candidateId is not null");
            return (Criteria) this;
        }

        public Criteria andCandidateidEqualTo(Integer value) {
            addCriterion("candidateId =", value, "candidateid");
            return (Criteria) this;
        }

        public Criteria andCandidateidNotEqualTo(Integer value) {
            addCriterion("candidateId <>", value, "candidateid");
            return (Criteria) this;
        }

        public Criteria andCandidateidGreaterThan(Integer value) {
            addCriterion("candidateId >", value, "candidateid");
            return (Criteria) this;
        }

        public Criteria andCandidateidGreaterThanOrEqualTo(Integer value) {
            addCriterion("candidateId >=", value, "candidateid");
            return (Criteria) this;
        }

        public Criteria andCandidateidLessThan(Integer value) {
            addCriterion("candidateId <", value, "candidateid");
            return (Criteria) this;
        }

        public Criteria andCandidateidLessThanOrEqualTo(Integer value) {
            addCriterion("candidateId <=", value, "candidateid");
            return (Criteria) this;
        }

        public Criteria andCandidateidIn(List<Integer> values) {
            addCriterion("candidateId in", values, "candidateid");
            return (Criteria) this;
        }

        public Criteria andCandidateidNotIn(List<Integer> values) {
            addCriterion("candidateId not in", values, "candidateid");
            return (Criteria) this;
        }

        public Criteria andCandidateidBetween(Integer value1, Integer value2) {
            addCriterion("candidateId between", value1, value2, "candidateid");
            return (Criteria) this;
        }

        public Criteria andCandidateidNotBetween(Integer value1, Integer value2) {
            addCriterion("candidateId not between", value1, value2, "candidateid");
            return (Criteria) this;
        }

        public Criteria andJobidIsNull() {
            addCriterion("jobId is null");
            return (Criteria) this;
        }

        public Criteria andJobidIsNotNull() {
            addCriterion("jobId is not null");
            return (Criteria) this;
        }

        public Criteria andJobidEqualTo(Integer value) {
            addCriterion("jobId =", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidNotEqualTo(Integer value) {
            addCriterion("jobId <>", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidGreaterThan(Integer value) {
            addCriterion("jobId >", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidGreaterThanOrEqualTo(Integer value) {
            addCriterion("jobId >=", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidLessThan(Integer value) {
            addCriterion("jobId <", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidLessThanOrEqualTo(Integer value) {
            addCriterion("jobId <=", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidIn(List<Integer> values) {
            addCriterion("jobId in", values, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidNotIn(List<Integer> values) {
            addCriterion("jobId not in", values, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidBetween(Integer value1, Integer value2) {
            addCriterion("jobId between", value1, value2, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidNotBetween(Integer value1, Integer value2) {
            addCriterion("jobId not between", value1, value2, "jobid");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andDateappliedIsNull() {
            addCriterion("dateApplied is null");
            return (Criteria) this;
        }

        public Criteria andDateappliedIsNotNull() {
            addCriterion("dateApplied is not null");
            return (Criteria) this;
        }

        public Criteria andDateappliedEqualTo(Date value) {
            addCriterion("dateApplied =", value, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDateappliedNotEqualTo(Date value) {
            addCriterion("dateApplied <>", value, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDateappliedGreaterThan(Date value) {
            addCriterion("dateApplied >", value, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDateappliedGreaterThanOrEqualTo(Date value) {
            addCriterion("dateApplied >=", value, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDateappliedLessThan(Date value) {
            addCriterion("dateApplied <", value, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDateappliedLessThanOrEqualTo(Date value) {
            addCriterion("dateApplied <=", value, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDateappliedIn(List<Date> values) {
            addCriterion("dateApplied in", values, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDateappliedNotIn(List<Date> values) {
            addCriterion("dateApplied not in", values, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDateappliedBetween(Date value1, Date value2) {
            addCriterion("dateApplied between", value1, value2, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDateappliedNotBetween(Date value1, Date value2) {
            addCriterion("dateApplied not between", value1, value2, "dateapplied");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedIsNull() {
            addCriterion("dateStatusUpdated is null");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedIsNotNull() {
            addCriterion("dateStatusUpdated is not null");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedEqualTo(Date value) {
            addCriterion("dateStatusUpdated =", value, "datestatusupdated");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedNotEqualTo(Date value) {
            addCriterion("dateStatusUpdated <>", value, "datestatusupdated");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedGreaterThan(Date value) {
            addCriterion("dateStatusUpdated >", value, "datestatusupdated");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("dateStatusUpdated >=", value, "datestatusupdated");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedLessThan(Date value) {
            addCriterion("dateStatusUpdated <", value, "datestatusupdated");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedLessThanOrEqualTo(Date value) {
            addCriterion("dateStatusUpdated <=", value, "datestatusupdated");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedIn(List<Date> values) {
            addCriterion("dateStatusUpdated in", values, "datestatusupdated");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedNotIn(List<Date> values) {
            addCriterion("dateStatusUpdated not in", values, "datestatusupdated");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedBetween(Date value1, Date value2) {
            addCriterion("dateStatusUpdated between", value1, value2, "datestatusupdated");
            return (Criteria) this;
        }

        public Criteria andDatestatusupdatedNotBetween(Date value1, Date value2) {
            addCriterion("dateStatusUpdated not between", value1, value2, "datestatusupdated");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table application
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table application
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}